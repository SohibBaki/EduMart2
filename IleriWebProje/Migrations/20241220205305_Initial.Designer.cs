// <auto-generated />
using System;
using IleriWebProje.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IleriWebProje.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241220205305_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IleriWebProje.Models.Mentors", b =>
                {
                    b.Property<int>("MentorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorID"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MentorID");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("IleriWebProje.Models.Mentors_Skills", b =>
                {
                    b.Property<int>("MentorID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.HasKey("MentorID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("Mentors_Skills");
                });

            modelBuilder.Entity("IleriWebProje.Models.Platforms", b =>
                {
                    b.Property<int>("PlatformID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlatformID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlatformID");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("IleriWebProje.Models.Skill_Organizers", b =>
                {
                    b.Property<int>("SkillOrganizerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillOrganizerID"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillOrganizerID");

                    b.ToTable("Skill_Organizers");
                });

            modelBuilder.Entity("IleriWebProje.Models.Skills", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformID")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillCategory")
                        .HasColumnType("int");

                    b.Property<string>("SkillDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillOrganizerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SkillID");

                    b.HasIndex("PlatformID");

                    b.HasIndex("SkillOrganizerID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("IleriWebProje.Models.Mentors_Skills", b =>
                {
                    b.HasOne("IleriWebProje.Models.Mentors", "Mentor")
                        .WithMany("Mentors_Skills")
                        .HasForeignKey("MentorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IleriWebProje.Models.Skills", "Skill")
                        .WithMany("Mentors_Skills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mentor");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("IleriWebProje.Models.Skills", b =>
                {
                    b.HasOne("IleriWebProje.Models.Platforms", "Platforms")
                        .WithMany("Skills")
                        .HasForeignKey("PlatformID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IleriWebProje.Models.Skill_Organizers", "Skill_Organizers")
                        .WithMany("Skills")
                        .HasForeignKey("SkillOrganizerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platforms");

                    b.Navigation("Skill_Organizers");
                });

            modelBuilder.Entity("IleriWebProje.Models.Mentors", b =>
                {
                    b.Navigation("Mentors_Skills");
                });

            modelBuilder.Entity("IleriWebProje.Models.Platforms", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("IleriWebProje.Models.Skill_Organizers", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("IleriWebProje.Models.Skills", b =>
                {
                    b.Navigation("Mentors_Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
